name: Frontend CI

on:
  push:
    paths:
      - 'front-end/**'
  pull_request:
    paths:
      - 'front-end/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # 或其他版本

      - name: Install dependencies
        run: |
          cd front-end
          npm install

      - name: Build application
        run: |
          cd front-end
          npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'  # 仅在 main 分支上执行部署

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install SSH client
        run: sudo apt-get install -y sshpass

      - name: Login to Docker Hub and Build and Push
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker build -t ${{ secrets.DOCKER_USERNAME }}/questify-frontend ./front-end  # 替换为实际的 Docker Hub 用户名和镜像名
          docker push ${{ secrets.DOCKER_USERNAME }}/questify-frontend  # 替换为实际的 Docker Hub 用户名和镜像名

      - name: Deploy to Remote Server
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          # 将私钥添加到 SSH agent
          echo "$SSH_PRIVATE_KEY" > id_rsa
          chmod 600 id_rsa
        
          # SSH 连接并在远程服务器上执行命令
          ssh -i id_rsa -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST << 'EOF'
          
          # 进入到部署的工作目录
          cd /home/SE5006/questify  # 使用服务器上项目的实际路径
          
          # 拉取前端镜像
          docker pull ${{ secrets.DOCKER_USERNAME }}/questify/frontend
  
          # 拉取后端镜像
          docker pull ${{ secrets.DOCKER_USERNAME }}/questify/backend
          
          # 停止旧的容器
          docker-compose down

          # 使用 docker-compose 构建和启动新容器
          docker-compose up -d --build
          EOF